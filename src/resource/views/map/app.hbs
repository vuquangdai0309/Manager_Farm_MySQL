{{> header}}
{{>navbar}}
{{#if onedata}}

<main id="main" class="main">
    <div class="pagetitle">
        <h1 style="text-align: center;">Khu vực vùng trồng</h1>
    </div><!-- End Page Title -->
    <section class="section dashboard">
        <div class="row">
            <div class="col-lg-3">
                <a href="/map/setview"><button class="btn btn-success">Chọn khu vực hiển thị </button></a><br><br>
                <!-- Recent Activity -->
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Cơ cấu cây trồng</h5>
                        {{#each onedata}}
                        <div id="setview" data-lat="{{this.lat}}" data-lng="{{this.lng}}"
                            data-zoomLevel="{{this.zoomLevel}}"></div>
                        {{/each}}
                        <form method="POST" class="form row" id="form-1">
                            <div class="form-group  mt-3 ">
                                <label for="name" class="form-label">Tên vùng trồng :</label>
                                <input type="text" class="form-control" id="namearea" placeholder="vùng trồng ..."
                                    name="namearea">
                                <div id="message"></div>
                            </div>
                        </form>
                        <div class=" mt-4">
                            <button class="btn btn-primary " id="btnsave" type="submit"
                                style=" width:80px;float: right;">Lưu</button>
                        </div>
                        <br><br>

                    </div>
                    <br>
                </div>
            </div><!-- End Recent Activity -->
            <div class="col-lg-9">
                <div class="row ">
                    <!-- Reports -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <div id="map" style="width: 100%; height: 70vh;"></div> <!-- End Line Chart -->
                            </div>
                        </div>
                    </div><!-- End Reports -->
                </div>
            </div><!-- End Left side columns -->
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-bordered ">
                    <thead style="text-align: center;">
                        <tr>
                            <th>Vùng trồng</th>
                            <th>Diện tích</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each data}}
                        <tr>
                            <td>{{this.namearea}}</td>
                            <td>{{formatNumber this.areaMeter}} m2</td>
                            <td><a> <i class="bi bi-trash3" data-bs-toggle="modal" data-bs-target="#delete-work-modal"
                                        data-id="{{this._id}}" style="color: red;"></i></a></td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</main><!-- End #main -->
{{/if}}
{{#unless onedata}}
<main id="main" class="main">
    <div class="pagetitle">
        <h1 style="text-align: center;">Khoanh vùng khu vực trồng của bạn </h1>
        <button style="width: 20%; " class="btn btn-success" id="clickbtn">Chọn khu vực </button>
    </div><!-- End Page Title -->
    <section class="section dashboard">
        <div class="row">
            <div class="col-lg-12">
                <div class="row ">
                    <!-- Reports -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-body">
                                <div id="setmap" style="width: 100%; height: 70vh;"></div> <!-- End Line Chart -->
                            </div>
                        </div>
                    </div><!-- End Reports -->
                </div>
            </div><!-- End Left side columns -->
        </div>
    </section>
</main><!-- End #main -->
{{/unless}}
<div id="delete-work-modal" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xóa khu vực trồng</h5>
                {{!-- <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                --}}
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa khu vực này không ?</p>
            </div>
            <div class=" modal-footer ">
                <button id="btn-delete-calendar" type="button" class="btn btn-danger"
                    style="float: right; width:100px">Đồng
                    ý
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                    style="float: right; width:100px">Thoát</button>
            </div>
        </div>
    </div>
</div>
{{!-- form delete --}}
<form name="delete-calendar-form" method="POST"></form>
{{> footer}}
<script src="/js/validate.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="/js/setview.js"></script>
<script>
    const exampleModal = document.getElementById('delete-work-modal')
    exampleModal.addEventListener('show.bs.modal', event => {
        var deleteForm = document.forms['delete-calendar-form']
        var btnDeleteCalendar = document.getElementById('btn-delete-calendar')
        const button = event.relatedTarget
        //get id from button delete
        const recipient = button.getAttribute('data-id')

        btnDeleteCalendar.onclick = function () {
            deleteForm.action = '/map/' + recipient + '?_method=DELETE'
            deleteForm.submit()
        }
    })
</script>
<script>
    btnsave = document.getElementById('btnsave')
    message = document.getElementById('message')

    //lấy tọa độ khi set view
    const setview = document.getElementById('setview')
    const lat = setview.getAttribute('data-lat')
    const lng = setview.getAttribute('data-lng')
    const zoomLevel = setview.getAttribute('data-zoomLevel')

    document.addEventListener('DOMContentLoaded', function () {
        const map = L.map('map').setView([lat, lng], zoomLevel);
        const osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        const googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        }).addTo(map);

        //Layer controller
        const baseMaps = {
            "OSM": osm,
            "Google map": googleStreets,
        }

        const drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        const drawControl = new L.Control.Draw({
            draw: {
                circlemarker: false,
                circle: false,
                // marker: true,
                polyline: false,
                // polygon: false,
                rectangle: false
            },
            edit: {
                featureGroup: drawnItems,

                poly: {
                    allowIntersection: false
                }
            },
        });
        map.addControl(drawControl);
        map.on('editable:deleted', function (e) {
            console.log('Polygon deleted:', e.layers);
        });

        // chỉnh sửa polygon
        map.on('draw:edited', function (e) {
            const layers = e.layers;
            const type = 'Polygon';
            layers.eachLayer(function (layer) {
                // Update your data or perform other actions
                const localpolygon = layer.toGeoJSON().geometry.coordinates[0];
                const areaMeter = L.GeometryUtil.geodesicArea(layer.getLatLngs()[0]);
                const area = areaMeter.toFixed(2)
                //    console.log('Diện tích: ' + area.toFixed(2) + ' mét vuông');
                const arrayPolygon = []
                arrayPolygon.push(localpolygon)
                //chuyển tọa độ từ object sang string
                const parseLocalpolygon = JSON.stringify(arrayPolygon)
                btnsave.onclick = function () {
                    input = document.getElementById('namearea').value
                    if (input === '') {
                        message.innerHTML = "Vui lòng nhập vùng trồng !"
                    }
                    else {
                        $.ajax({
                            url: '/map/store',
                            type: 'POST',
                            data: {
                                area: area,
                                type: type,
                                namearea: `Khu vực: ${input}`,
                                coordinates: parseLocalpolygon
                            }
                        })
                        //bắt dự kiên load trang
                        location.reload();
                    }
                }
            });

        });
        map.on('draw:created', function (event) {
            //  const type = event.layerType;
            const layer = event.layer;
            drawnItems.addLayer(layer);

            const type = layer instanceof L.Marker ? 'Point' : 'Polygon';
            const localpolygon = layer instanceof L.Marker ? layer.toGeoJSON().geometry.coordinates : layer.toGeoJSON().geometry.coordinates[0]
            //  lưu tọa độ vào mảng


            if (layer instanceof L.Marker) {
                //chuyển tọa độ từ object sang string
                const parseLocalpolygon = JSON.stringify(localpolygon)
                btnsave.onclick = function () {
                    input = document.getElementById('namearea').value
                    if (input === '') {
                        message.innerHTML = "Vui lòng nhập tên điểm !"
                    }
                    else {
                        $.ajax({
                            url: '/map/store',
                            type: 'POST',
                            data: {
                                area: '',
                                type: type,
                                namearea: `Điểm: ${input}`,
                                coordinates: parseLocalpolygon
                            }
                        })
                        //bắt dự kiên load trang
                        location.reload();
                    }
                }
            }
            else {
                //tính diện tích
                const areaMeter = L.GeometryUtil.geodesicArea(layer.getLatLngs()[0]);
                const area = areaMeter.toFixed(2)
                // console.log('Diện tích: ' + area.toFixed(2) + ' mét vuông');
                const arrayPolygon = []
                arrayPolygon.push(localpolygon)
                //chuyển tọa độ từ object sang string
                const parseLocalpolygon = JSON.stringify(arrayPolygon)
                btnsave.onclick = function () {
                    input = document.getElementById('namearea').value
                    if (input === '') {
                        message.innerHTML = "Vui lòng nhập vùng trồng !"
                    }
                    else {
                        $.ajax({
                            url: '/map/store',
                            type: 'POST',
                            data: {
                                area: area,
                                type: type,
                                namearea: `Vùng trồng: ${input}`,
                                coordinates: parseLocalpolygon
                            }
                        })
                        //bắt dự kiên load trang
                        location.reload();
                    }
                }
            }
        })

        //hàm load dữ liệu
        function loadData() {
            $.ajax({
                url: '/map/loadMap',
                type: 'GET',
            }).then(data => {
                const list = data.data.map((toado) => {
                    //chuyển dữ liệu về dạng object
                    const par = JSON.parse(toado.coordinates)
                    const namearea = toado.namearea
                    const type = toado.type
                    const areaShow = toado.areaMeter
                    return {
                        type: "Feature",
                        properties: {
                            "name": namearea,
                            "area": areaShow
                        },
                        geometry: {
                            type: type,
                            coordinates: par,
                        },
                    }
                }
                )
                //hiển thị dữ liệu ra client
                const stateData = {
                    "type": "FeatureCollection",
                    "features": list
                }
                //Caculate measure
                L.geoJSON(stateData, {
                    onEachFeature: function (feature, layer) {
                        // Bind Popup với nội dung từ thuộc tính "name" của đối tượng GeoJSON

                        layer.bindPopup(`<b> ${feature.properties.name} </b>`);
                    }
                }).addTo(map);

            }).catch(err => console.log(err))
        }
        loadData()
        // get data từ localstorage sau đó gán stateData
    });
</script>